pipeline {
    agent any
    environment {
        GITLAB_CREDENTIAL = credentials('Anders_Github')
        CI = 'true'
    }

    stages {

        stage('pull git'){
            steps {
                git branch: 'main', credentialsId: 'Anders_Github', url: 'git@github.com:andeandr100/WSO2-deployment-single-node.git'
                sh ('ls -la')
           }
        }

        stage('build docker image'){
            steps {
                echo '${WORKSPACE}'
                dir("${WORKSPACE}/docker/"){
                    echo 'build docker image'
                    sh ('whoami')
                    sh ('pwd')
                    sh ('cp /mnt/storage/backup/wso2/client-truststore.jks client-truststore.jks')
                    sh ('cp /mnt/storage/backup/wso2/internal-keystore.jks internal-keystore.jks')
                    sh ('cp /mnt/storage/backup/wso2/tls-keystore.jks tls-keystore.jks')

                    sh ('docker build -t wso2/am:latest .')
                    sh ('docker tag wso2/am:latest localhost:32000/wso2:latest')
                    sh ('docker push localhost:32000/wso2:latest')
                }
            }
        }


        stage('deploy helm chart'){
            steps {
                withCredentials([usernamePassword(credentialsId: 'wso2-admin-password', passwordVariable: 'pass', usernameVariable: 'user')]) {
                    // the code here can access $pass and $user
                    sh ("sed -i 's/{{wso2-password}}/$pass/' ${WORKSPACE}/am-single/templates/am/instance/wso2am-am-conf.yaml")
                }
                withCredentials([usernamePassword(credentialsId: 'postgresql-wso2-password', passwordVariable: 'pass', usernameVariable: 'user')]) {
                    // the code here can access $pass and $user
                    sh ("sed -i 's/{{postgresql-wso2-password}}/$pass/' ${WORKSPACE}/am-single/templates/am/instance/wso2am-am-conf.yaml")
                }
                withCredentials([usernamePassword(credentialsId: 'tls-keystore-password', passwordVariable: 'pass', usernameVariable: 'user')]) {
                    // the code here can access $pass and $user
                    sh ("sed -i 's/{{tls-keystore-password}}/$pass/' ${WORKSPACE}/am-single/templates/am/instance/wso2am-am-conf.yaml")
                }
                withCredentials([usernamePassword(credentialsId: 'internal-keystore-password', passwordVariable: 'pass', usernameVariable: 'user')]) {
                    // the code here can access $pass and $user
                    sh ("sed -i 's/{{internal-keystore-password}}/$pass/' ${WORKSPACE}/am-single/templates/am/instance/wso2am-am-conf.yaml")
                }

                sh ('helm upgrade --install wso2 ${WORKSPACE}/am-single --namespace wso2 --create-namespace -f ${WORKSPACE}/am-single/values.yaml')

                echo 'build docker image'
            }
        }
    }
}

