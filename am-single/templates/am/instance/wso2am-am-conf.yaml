# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "am.resource.prefix" . }}-am-conf
  namespace : {{ .Release.Namespace }}
  {{ if .Values.wso2.deployment.am.config }}
data:
  {{- range $index, $content := .Values.wso2.deployment.am.config }}
  {{ $index }}: |-
{{ tpl $content $ | indent 4 }}
  {{- end }}

  {{ else }}
data:
  deployment.toml: |-
    [server]
    hostname = "{{ .Values.wso2.deployment.am.ingress.management.hostname }}"
    #offset=0
    base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
    #discard_empty_caches = false
    server_role = "default"

    [super_admin]
    username = "admin"
    password = "{{wso2-password}}"
    create_admin_account = true

    [user_store]
    type = "database_unique_id"

    [database.shared_db]
    type = "postgre"
    url = "jdbc:postgresql://192.168.1.201:5432/wso2_shared_db"
    username = "wso2"
    password = "{{postgresql-wso2-password}}"
    driver = "org.postgresql.Driver"
    validationQuery = "SELECT 1"

    [database.apim_db]
    type = "postgre"
    url = "jdbc:postgresql://192.168.1.201:5432/wso2_apim_db"
    username = "wso2"
    password = "{{postgresql-wso2-password}}"
    driver = "org.postgresql.Driver"
    validationQuery = "SELECT 1"

    [keystore.tls]
    file_name =  "tls-keystore.jks"
    type =  "JKS"
    password =  "{{tls-keystore-password}}"
    alias =  "servertls"
    key_password =  "{{tls-keystore-password}}"

    [keystore.internal]
    file_name =  "internal-keystore.jks"
    type =  "JKS"
    password =  "{{internal-keystore-password}}"
    alias =  "encryptkey"
    key_password =  "{{internal-keystore-password}}"


    [[apim.gateway.environment]]
    name = "Default"
    type = "hybrid"
    provider = "wso2"
    display_in_api_console = true
    description = "This is a hybrid gateway that handles both production and sandbox token traffic."
    show_as_token_endpoint_url = true
    service_url = "https://localhost:${mgt.transport.https.port}/services/"
    username= "${admin.username}"
    password= "${admin.password}"
    ws_endpoint = "ws://localhost:9099"
    wss_endpoint = "wss://localhost:8099"
    https_endpoint = "https://{{ .Values.wso2.deployment.am.ingress.gateway.hostname }}:30381"
    websub_event_receiver_http_endpoint = "http://{{ .Values.wso2.deployment.am.ingress.websub.hostname }}"
    websub_event_receiver_https_endpoint = "https://{{ .Values.wso2.deployment.am.ingress.websub.hostname }}"

    [apim.sync_runtime_artifacts.gateway]
    gateway_labels =["Default"]

    [apim.devportal]
    url = "https://{{ .Values.wso2.deployment.am.ingress.management.hostname }}/devportal"

    [apim.cors]
    allow_origins = "*"
    allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
    allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey","Internal-Key"]
    allow_credentials = false

    [[event_handler]]
    name="userPostSelfRegistration"
    subscriptions=["POST_ADD_USER"]

    [service_provider]
    sp_name_regex = "^[\\sa-zA-Z0-9._-]*$"

    [[event_listener]]
    id = "token_revocation"
    type = "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
    name = "org.wso2.is.notification.ApimOauthEventInterceptor"
    order = 1
    [event_listener.properties]
    notification_endpoint = "https://localhost:${mgt.transport.https.port}/internal/data/v1/notify"
    username = "${admin.username}"
    password = "${admin.password}"
    'header.X-WSO2-KEY-MANAGER' = "default"

    [transport.https.properties]
    proxyPort = 30380

    [oauth.grant_type.token_exchange]
    enable = true
    allow_refresh_tokens = true
    iat_validity_period = "1h"

    [database.local]
    url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"

  {{ end }}
